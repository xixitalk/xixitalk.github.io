<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on xixitalk&#39;s snippet</title>
    <link>https://xixitalk.github.io/tags/tech/</link>
    <description>Recent content in Tech on xixitalk&#39;s snippet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 Aug 2018 06:11:31 +0800</lastBuildDate>
    
	<atom:link href="https://xixitalk.github.io/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>用ss-redir或redsocks搭建透明网关</title>
      <link>https://xixitalk.github.io/blog/2018/08/31/transparent-proxy/</link>
      <pubDate>Fri, 31 Aug 2018 06:11:31 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2018/08/31/transparent-proxy/</guid>
      <description>&lt;p&gt;原生android刷机后第一次开机系统初始设置要连接Google服务器，如果没有透明代理就很麻烦，进不了桌面。这里可以通过一台Linux机器（我用的是第一代树莓派）来达到透明代理的作用。平常情况下手机、平板和机顶盒也可以通过透明代理上网，简化配置。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>标准C库里的errno是怎么实现的？</title>
      <link>https://xixitalk.github.io/blog/2018/08/02/errno-in-libc/</link>
      <pubDate>Thu, 02 Aug 2018 14:36:18 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2018/08/02/errno-in-libc/</guid>
      <description>&lt;p&gt;首先&lt;code&gt;errno&lt;/code&gt;是个全局变量，刚开始UNIX/Linux只有进程，这样多进程也是安全的。但是后来有了线程，线程间是可以共享全局变量的，这样&lt;code&gt;errno&lt;/code&gt;就线程不安全了。解决办法是线程实现TLS(Thread Local Storage)，每个线程都有一个&lt;code&gt;errno&lt;/code&gt;变量。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>动态模块加载清除icache</title>
      <link>https://xixitalk.github.io/blog/2018/07/09/clean-icache/</link>
      <pubDate>Mon, 09 Jul 2018 20:07:29 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2018/07/09/clean-icache/</guid>
      <description>&lt;p&gt;产品是嵌入式RTOS系统，一个第三方软件自己实现了程序动态加载，问题是：程序加载后跳转执行，有时候正常，有时候导致系统死机，死机原因是未定义指令异常（ARM UND）。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>libgcc是什么</title>
      <link>https://xixitalk.github.io/blog/2018/05/07/what-is-libgcc/</link>
      <pubDate>Mon, 07 May 2018 11:34:13 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2018/05/07/what-is-libgcc/</guid>
      <description>&lt;p&gt;一个产品flash空间非常小，只有16MB，所以不必要的东西都要裁剪掉。一次有个研发问我：发现有个程序如果缺失&lt;code&gt;libgcc_s.so.1&lt;/code&gt;，pthread_join()就会运行不正常，但是无论是&lt;code&gt;ldd&lt;/code&gt;还是&lt;code&gt;readelf -d&lt;/code&gt;都没有发现依赖&lt;code&gt;libgcc_s.so.1&lt;/code&gt;。搜索得知PC linux上也大量类似&lt;code&gt;libgcc_s.so.1 must be installed for pthread_cancel to work&lt;/code&gt;的问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux信号回调栈空间探究</title>
      <link>https://xixitalk.github.io/blog/2017/12/20/linux-signal-handler-stack/</link>
      <pubDate>Wed, 20 Dec 2017 14:13:53 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2017/12/20/linux-signal-handler-stack/</guid>
      <description>&lt;p&gt;Linux上通过signal()或者sigaction()可以自定义注册一个信号的信号回调，那么信号回调是执行的栈空间在哪里呢？以下代码以内核3.4.x  ARM架构为例。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>便于代码阅读清理内核代码</title>
      <link>https://xixitalk.github.io/blog/2017/12/03/clean-linux-kernel-file/</link>
      <pubDate>Sun, 03 Dec 2017 14:42:05 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2017/12/03/clean-linux-kernel-file/</guid>
      <description>&lt;p&gt;Linux代码庞大，代码阅读时候发现无关代码太多，清理一下无关代码便于阅读（清理的标准是某产品内核编译没有用到的文件）。&lt;/p&gt;

&lt;p&gt;原理：版本编译用到的文件会更新文件的atime，atime没有更新的文件就是编译无关文件。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>从octopress迁移到hugo</title>
      <link>https://xixitalk.github.io/blog/2017/11/27/migrate-to-hugo-from-octopress/</link>
      <pubDate>Mon, 27 Nov 2017 17:23:59 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2017/11/27/migrate-to-hugo-from-octopress/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://octopress.org/&#34; target=&#34;_blank&#34;&gt;octopress&lt;/a&gt;编译速度很慢，2.0版本依赖老的ruby版本，环境搭建复杂，3.0版本几年来还没有正式发布，所以本blog切换到了&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;，下面是迁移记录。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用frp代替stunnel进行服务共享和安全连接</title>
      <link>https://xixitalk.github.io/blog/2017/11/13/use-frp-instead-of-stunnel/</link>
      <pubDate>Mon, 13 Nov 2017 16:14:36 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2017/11/13/use-frp-instead-of-stunnel/</guid>
      <description>&lt;p&gt;需求：家里内网的服务，办公室内网可以访问。&lt;/p&gt;

&lt;h4 id=&#34;环境说明&#34;&gt;环境说明&lt;/h4&gt;

&lt;p&gt;办公室电脑是 10.40.xx.xx这样的内网IP。家里路由器是有公网IP的。家里一台树莓派3（IP 192.168.1.104）接在路由器下，路由器IP是192.168.1.1 公网IP假定是180.109.114.114。路由器上配置端口映射，把端口14828映射到树莓派3的192.168.1.104上。端口号14828可以自行选择其他的，和下面保持一致即可。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>内网穿透：从家里连接办公室电脑</title>
      <link>https://xixitalk.github.io/blog/2017/11/13/link-office-from-home-via-frp/</link>
      <pubDate>Mon, 13 Nov 2017 09:11:13 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2017/11/13/link-office-from-home-via-frp/</guid>
      <description>&lt;p&gt;环境说明: 办公室电脑是 10.40.xx.xx这样的内网IP，并且办公环境要通过HTTP代理才能访问外网。我没有公网IP的VPS，但是家里路由器是有公网IP的，可以借路由器的公网IP进行内网穿透。&lt;/p&gt;

&lt;h4 id=&#34;环境&#34;&gt;环境&lt;/h4&gt;

&lt;p&gt;家里一台树莓派3（IP 192.168.1.104）接在路由器下，路由器IP是192.168.1.1  公网IP假定是180.109.114.114。路由器上配置端口映射，把14827和14828都映射到树莓派3的192.168.1.104上，端口号可以自行选择其他的，和下面保持一致即可。&lt;/p&gt;

&lt;p&gt;内网穿透使用&lt;a href=&#34;https://github.com/fatedier/frp/blob/master/README_zh.md&#34; target=&#34;_blank&#34;&gt;frp&lt;/a&gt;软件。frp编译好的二进制下载地址&lt;a href=&#34;https://github.com/fatedier/frp/releases&#34; target=&#34;_blank&#34;&gt;https://github.com/fatedier/frp/releases&lt;/a&gt;，树莓派使用&lt;code&gt;frp_0.13.0_linux_arm.tar.gz&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>getaddrinfo 返回Name or service not known错误</title>
      <link>https://xixitalk.github.io/blog/2017/09/19/getaddrinfo-error/</link>
      <pubDate>Tue, 19 Sep 2017 14:23:57 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2017/09/19/getaddrinfo-error/</guid>
      <description>&lt;p&gt;关键词：glibc  getaddrinfo&lt;/p&gt;

&lt;p&gt;同事反馈说程序调用&lt;code&gt;getaddrinfo&lt;/code&gt;函数出错（arm linux平台），glibc是2.20，我想glibc不会这么弱，这么标准的函数都有问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>树莓派3上编译haproxy</title>
      <link>https://xixitalk.github.io/blog/2017/09/03/compile-haproxy-on-raspberry3/</link>
      <pubDate>Sun, 03 Sep 2017 06:01:08 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2017/09/03/compile-haproxy-on-raspberry3/</guid>
      <description>&lt;p&gt;最近发现树莓派上haproxy有点问题，Google Play下载有些不正常。所以想更新编译haproxy。raspbian软件仓库的haproxy的版本比较低，所以直接下载haproxy源代码编译。更新过程记录下来。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>华硕路由器外接硬盘格式化成什么文件系统最好</title>
      <link>https://xixitalk.github.io/blog/2016/11/12/How-to-Format-Usb-Drive-for-asus-router/</link>
      <pubDate>Sat, 12 Nov 2016 15:33:41 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2016/11/12/How-to-Format-Usb-Drive-for-asus-router/</guid>
      <description>&lt;p&gt;关键词：华硕 AC66U AC68U 外接硬盘 文件系统 EXT4 EXT3 NTFS FAT32&lt;/p&gt;

&lt;p&gt;我有一台华硕AC66U，外接了一块2.5吋移动硬盘。不知道格式化成什么格式最好？硬盘本来是EXT4格式的，插上发现没有自动挂载，搜索发现，AC66U建议用&lt;strong&gt;EXT3&lt;/strong&gt;格式，而AC68U建议用&lt;strong&gt;EXT4&lt;/strong&gt;格式。果然格式成EXT3后，插上AC66U后&lt;strong&gt;自动挂载&lt;/strong&gt;了。其他华硕机器未验证。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pkcs11-helper编译</title>
      <link>https://xixitalk.github.io/blog/2016/11/01/pkcs11-helper-build/</link>
      <pubDate>Tue, 01 Nov 2016 18:37:08 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2016/11/01/pkcs11-helper-build/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/OpenSC/pkcs11-helper/releases&#34; target=&#34;_blank&#34;&gt;pkcs11-helper&lt;/a&gt;也真是的，软件包里&lt;code&gt;INSTALL&lt;/code&gt;里说用&lt;code&gt;./configure&lt;/code&gt;生成&lt;code&gt;Makefile&lt;/code&gt;，但是软件包还没有&lt;code&gt;configure&lt;/code&gt;文件，需要&lt;code&gt;autoreconf&lt;/code&gt;生成&lt;code&gt;configure&lt;/code&gt;文件。妈蛋，&lt;code&gt;INSTALL&lt;/code&gt;多写一句&lt;code&gt;autoreconf -ivf&lt;/code&gt;会死吗？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stunnel verify选项配置</title>
      <link>https://xixitalk.github.io/blog/2016/10/18/stunnel-verify-config/</link>
      <pubDate>Tue, 18 Oct 2016 09:12:59 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2016/10/18/stunnel-verify-config/</guid>
      <description>&lt;p&gt;verify配置认证方式，取值0 1 2 3 4。&lt;/p&gt;

&lt;p&gt;0 - request and ignore peer cert&lt;br /&gt;
1 - only validate peer cert if present&lt;br /&gt;
2 - always require a valid peer cert&lt;br /&gt;
3 - verify peer with locally installed cert&lt;br /&gt;
4 - ignore CA chain and only verify peer cert&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stunnel双向证书认证</title>
      <link>https://xixitalk.github.io/blog/2016/10/13/Stunnel-With-Bilateral-Authentication/</link>
      <pubDate>Thu, 13 Oct 2016 20:09:49 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2016/10/13/Stunnel-With-Bilateral-Authentication/</guid>
      <description>&lt;p&gt;stunnel 双向证书认证：&lt;strong&gt;防止没授权的客户端连接stunnel服务器，防止客户端连接假的服务器&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;stunnel官方的&lt;a href=&#34;https://www.stunnel.org/auth.html&#34; target=&#34;_blank&#34;&gt;说明&lt;/a&gt;是：（客户端）检查服务器端证书是为了防止&lt;strong&gt;中间人攻击&lt;/strong&gt;；（服务器端）检查客户端证书是为了严格控制客户端的访问。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Server authentication prevents &lt;a href=&#34;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&#34; target=&#34;_blank&#34;&gt;Man-In-The-Middle&lt;/a&gt; (MITM) attacks on the encryption protocol.&lt;/li&gt;
&lt;li&gt;Client authentication allows for restricting access for individual clients (access control).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我的AStyle配置选项</title>
      <link>https://xixitalk.github.io/blog/2016/07/11/my-AStyle-config/</link>
      <pubDate>Mon, 11 Jul 2016 18:35:57 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2016/07/11/my-AStyle-config/</guid>
      <description>&lt;p&gt;我的AStyle代码格式工具的选项：AStyle.exe -A1 -C -S -K -Y -f -s4 -p -U -o -n main.c&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;notepad++&lt;/code&gt;里添加：&lt;code&gt;运行(R)--运行(R)&lt;/code&gt; 选择AStyle.exe，选项输入&lt;code&gt;-A1 -C -S -K -Y -f -s4 -p -U -o -n &amp;quot;$(FULL_CURRENT_PATH)&amp;quot;&lt;/code&gt;，然后点击&lt;code&gt;保存&lt;/code&gt;，这样就保存在运行菜单里了。每次使用从&lt;code&gt;运行(R)&lt;/code&gt;点击即可。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UINT32引起的死循环</title>
      <link>https://xixitalk.github.io/blog/2016/07/09/dead-loop-UINT32/</link>
      <pubDate>Sat, 09 Jul 2016 10:02:35 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2016/07/09/dead-loop-UINT32/</guid>
      <description>&lt;p&gt;UINT32 引起的死循环&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>免费申请S/MIME证书</title>
      <link>https://xixitalk.github.io/blog/2014/06/21/Free-SMIME-Certificate-Key/</link>
      <pubDate>Sat, 21 Jun 2014 00:05:11 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2014/06/21/Free-SMIME-Certificate-Key/</guid>
      <description>&lt;h2 id=&#34;申请证书&#34;&gt;申请证书&lt;/h2&gt;

&lt;p&gt;从这里可以申请到免费的S/MIME 邮件证书：&lt;a href=&#34;http://www.instantssl.com/ssl-certificate-products/free-email-certificate.html&#34; target=&#34;_blank&#34;&gt;http://www.instantssl.com/ssl-certificate-products/free-email-certificate.html&lt;/a&gt;，
提交生成之后会把证书发送到邮箱里。&lt;/p&gt;

&lt;h2 id=&#34;证书安装&#34;&gt;证书安装&lt;/h2&gt;

&lt;p&gt;在邮箱里点击连接就会把证书安装到电脑系统中（包括windows和Mac OSX)。&lt;br /&gt;
证书认证关系如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一级根证书USERTrust(UTN-USERFirst-Client Authentication and Email)，系统中默认都带了；&lt;/li&gt;
&lt;li&gt;第二级中级证书是COMODO Client Authentication and Secure Email CA;&lt;/li&gt;
&lt;li&gt;第三级才是刚刚申请的个人证书。&lt;br /&gt;
如果在证书管理器查看刚刚申请的个人证书显示不正常的话，说明系统中缺少第二级中级证书，从这里下载安装&lt;a href=&#34;http://crt.comodoca.com/COMODOClientAuthenticationandSecureEmailCA.crt&#34; target=&#34;_blank&#34;&gt;http://crt.comodoca.com/COMODOClientAuthenticationandSecureEmailCA.crt&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;证书安装到ios系统&#34;&gt;证书安装到iOS系统&lt;/h2&gt;

&lt;p&gt;在电脑系统里打开证书管理器（windows系统是运行certmgr.msc），把证书（包含私钥）导出，windows是pfx格式，Mac OSX是p12格式，导出的证书要设置私钥保护密码，iOS的证书安装需要输入这个密码。把这个pfx或者p12格式的证书发邮件到iOS上，点击打开即提示安装，输入之前的保护密码就安装到iOS系统中了。&lt;br /&gt;
同样，iOS系统中缺少第二级中级证书，从这里下载安装&lt;a href=&#34;http://crt.comodoca.com/COMODOClientAuthenticationandSecureEmailCA.crt&#34; target=&#34;_blank&#34;&gt;http://crt.comodoca.com/COMODOClientAuthenticationandSecureEmailCA.crt&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>curl下载断点传续</title>
      <link>https://xixitalk.github.io/blog/2014/04/12/curl-continue/</link>
      <pubDate>Sat, 12 Apr 2014 17:22:17 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2014/04/12/curl-continue/</guid>
      <description>&lt;h3 id=&#34;curl下载断点传续&#34;&gt;curl下载断点传续&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;curl -C offset -O http://google.com/p4.mp4 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;offset手动输入已经下载的字节数&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -C - -O http://google.com/p4.mp4 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-C -&lt;/code&gt;可以自动识别offet续传&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>twitter-python BadStatusLine错误</title>
      <link>https://xixitalk.github.io/blog/2014/04/06/twitter-python-badstatusline/</link>
      <pubDate>Sun, 06 Apr 2014 20:20:25 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2014/04/06/twitter-python-badstatusline/</guid>
      <description>&lt;p&gt;事情是这样的：我用&lt;a href=&#34;https://github.com/bear/python-twitter&#34; target=&#34;_blank&#34;&gt;twitter-python&lt;/a&gt;在本地运行， 抓取一个推号的homeline， 抓取后sleep两分钟再抓取， 不停的循环｡从昨天早上开始， 程序出现如下错误， 且每次都是这个错误｡获得推友收藏列表和fo人的api返回都是正常的，就是REST的api出这种错误。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python里用smtplib发邮件使用代理</title>
      <link>https://xixitalk.github.io/blog/2014/04/04/smtplib-with-proxy/</link>
      <pubDate>Fri, 04 Apr 2014 09:51:49 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2014/04/04/smtplib-with-proxy/</guid>
      <description>&lt;p&gt;关键词：smtplib mail proxy&lt;/p&gt;

&lt;p&gt;树莓派上一个cron python程序直接用smtplib发送gmail邮件昨天出现问题了，错误是：socket.error: [Errno 97] Address family not supported by protocol，之前都是好好的，我用的smtp.gmail.com，端口是587。&lt;/p&gt;

&lt;p&gt;我搜索了一圈，觉得原因是国家防火墙搞得鬼，如果smtplib添加代理就可以避免这种情况。搜索了很多方法都觉得不好使，突然想到以前为google app engine的appcfg.py使用SocksiPy添加代理的方法，并且SocksiPy现在被包含在httplib2的库里了，这样就更方便了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>搭建局域网跨路由网络</title>
      <link>https://xixitalk.github.io/blog/2013/06/22/routing-cross/</link>
      <pubDate>Sat, 22 Jun 2013 09:34:57 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2013/06/22/routing-cross/</guid>
      <description>&lt;p&gt;场景：两个路由器每个都组建一个局域网，每个局域网里的电脑想访问另一个局域网的电脑。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python从字符串用readlines读取操作</title>
      <link>https://xixitalk.github.io/blog/2013/06/13/python-readlines-from-string/</link>
      <pubDate>Thu, 13 Jun 2013 09:57:17 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2013/06/13/python-readlines-from-string/</guid>
      <description>&lt;p&gt;场景：用&lt;a href=&#34;http://curl.haxx.se/&#34; target=&#34;_blank&#34;&gt;cURL&lt;/a&gt;命令POST了一个文本文件到web服务器，想在服务器端对这个文件进行readlines操作&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数字签名时的私钥加密公钥解密</title>
      <link>https://xixitalk.github.io/blog/2013/06/07/digest-signature/</link>
      <pubDate>Fri, 07 Jun 2013 15:33:05 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2013/06/07/digest-signature/</guid>
      <description>&lt;p&gt;疑问：数字签名时的&lt;code&gt;私钥加密 公钥解密&lt;/code&gt;怎么理解？&lt;/p&gt;

&lt;p&gt;前一段时间设计系统启动,为了保障安全使用数字签名进行版本验证，平常的不对称加解密（公钥加密，私钥解密）很容易理解，而数字签名时的&lt;code&gt;私钥加密 公钥解密&lt;/code&gt;是怎么回事呢？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>反对『中医』理由汇集</title>
      <link>https://xixitalk.github.io/blog/2013/06/06/Anti-Traditional-Chinese-medicine/</link>
      <pubDate>Thu, 06 Jun 2013 09:59:58 +0800</pubDate>
      
      <guid>https://xixitalk.github.io/blog/2013/06/06/Anti-Traditional-Chinese-medicine/</guid>
      <description>&lt;h3 id=&#34;中药制剂是大分子-容易造成肾衰&#34;&gt;中药制剂是大分子，容易造成肾衰&lt;/h3&gt;

&lt;p&gt;中药制剂是大分子，输液进入血液循环系统，造成肾衰。
&lt;a href=&#34;http://zhongyi.ifeng.com/news/pfmf/20101/33509.shtml&#34; target=&#34;_blank&#34;&gt;http://zhongyi.ifeng.com/news/pfmf/20101/33509.shtml&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;马兜铃酸造成肾衰&#34;&gt;马兜铃酸造成肾衰&lt;/h3&gt;

&lt;p&gt;马兜铃酸造成肾衰，存在众多中药配方中&lt;/p&gt;

&lt;h3 id=&#34;中药安神的机理是让人重金属中毒&#34;&gt;中药安神的机理是让人重金属中毒&lt;/h3&gt;

&lt;p&gt;中药安神的机理是让人硫化汞（包含在朱砂中）轻微中毒，让人萎靡、反应迟钝，达到安神镇静效果&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>